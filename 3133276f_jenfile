pipeline {
    agent any
    
    stages {
        stage('3133276f-OP-S1') {
            steps {
                script {
                    echo "Removing old backup image..."
                    sh 'docker image rm -f 3133276f_uatsvr_image || true'

                    echo "Creating new backup image..."
                    sh 'docker commit 3133276f_uatsvr 3133276f_uatsvr_image'

                    sh '''
                        puppet resource file /tmp/3133276f ensure=absent force=true;
                        puppet resource file /tmp/3133276f ensure=directory;
                        cd /tmp/3133276f;
                        git clone https://github.com/Thariq-git/3133276f_op_repo.git;
                        targets=3133276f_uatsvr.localdomain;
                        locate_script='/tmp/3133276f/3133276f_op_repo/3133276f_script';
                        bolt script run $locate_script -t $targets -u clientadm -p user123 --no-host-key-check --run-as root;
                    '''
                    
                    sh '''
                        sudo -n cp -p /tmp/3133276f/3133276f_op_repo/3133276f_index.html /var/www/html/index.html;
                        sudo -n chown www-data:www-data /var/www/html/index.html;
                        sudo -n chmod 644 /var/www/html/index.html;
                        sudo -n systemctl restart apache2;
                    '''
                    
                    echo "3133276f_OP_S1: UAT web server is backed up, updated, and deployed"
                }
            }
        }
        
        stage('3133276f-OP-S2') {
            steps {
                script {
                    def uatsvrPort = "32500"
                    def resultFile = "/tmp/uatsvr-result-file"
                    
                    echo "Executing web test for UAT server..."
                    sh "curl -Is http://localhost:${uatsvrPort} | head -n 1 > ${resultFile}"
                    def result = sh(script: "cat ${resultFile}", returnStdout: true).trim()
                    
                    if (result.contains("HTTP/1.1 200 OK")) {
                        echo "3133276f_OP_S2: UAT svr is running after update"
                    } else {
                        echo "3133276f_OP_S2: UAT svr fails"
                        error("UAT web server test failed. Aborting pipeline.")
                    }
                }
            }
        }
        
        stage('3133276f-OP-S3') {
            steps {
                input('3133276f_OP_S3: Proceed with stress test on UAT web server?')
            }
        }
        
        stage('3133276f-OP-S4') {
            steps {
                echo "3133276f_OP_S4: Stress test result is good"
            }
        }
        
        stage('3133276f-OP-S5') {
            steps {
                input('3133276f_OP_S5: Deploy new update to prod web server?')
            }
        }
        
        stage('3133276f-OP-S6') {
            steps {
                script {
                    echo "Removing old backup image..."
                    sh 'docker image rm -f 3133276f_prodsvr_image || true'

                    echo "Creating new backup image..."
                    sh 'docker commit 3133276f_prodsvr 3133276f_prodsvr_image'

                    sh '''
                        puppet resource file /tmp/3133276f ensure=absent force=true;
                        puppet resource file /tmp/3133276f ensure=directory;
                        cd /tmp/3133276f;
                        git clone https://github.com/Thariq-git/3133276f_op_repo.git;
                        targets=3133276f_prodsvr.localdomain;
                        locate_script='/tmp/3133276f/3133276f_op_repo/3133276f_script';
                        bolt script run $locate_script -t $targets -u clientadm -p user123 --no-host-key-check --run-as root;
                    '''
                    
                    sh '''
                        sudo -n cp -p /tmp/3133276f/3133276f_op_repo/3133276f_index.html /var/www/html/index.html;
                        sudo -n chown www-data:www-data /var/www/html/index.html;
                        sudo -n chmod 644 /var/www/html/index.html;
                        sudo -n systemctl restart apache2;
                    '''
                    
                    echo "3133276f_OP_S6: Prod web server is backed up, updated, and deployed"
                }
            }
        }
        
        stage('3133276f-OP-S7') {
            steps {
                script {
                    def prodsvrPort = "32600"
                    def resultFile = "/tmp/prodsvr-result-file"
                    
                    echo "Executing web test for PROD server..."
                    sh "curl -Is http://localhost:${prodsvrPort} | head -n 1 > ${resultFile}"
                    def result = sh(script: "cat ${resultFile}", returnStdout: true).trim()
                    
                    if (result.contains("HTTP/1.1 200 OK")) {
                        echo "3133276f_OP_S7: Production website is operational"
                    } else {
                        echo "3133276f_OP_S7: Production website failed!"
                        
                        def v2 = input(
                            message: 'Action',
                            parameters: [
                                choice(name: 'Action', choices: ['Trigger roll back', 'Troubleshooting'])
                            ]
                        )
                        
                        if (v2 == "Trigger roll back") {
                            echo "3133276f_OP_S7: Production website is rolling back"
                        } else {
                            echo "3133276f_OP_S7: Troubleshooting of Production website is in progress"
                        }
                    }
                }
            }
        }
    }
}
